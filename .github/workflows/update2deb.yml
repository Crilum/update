name: update2deb

# Controls when the workflow will run
on:
  release:
    types:
      - created
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  create-update-deb:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
  
      - name: save working directory in variable 'DIR'
        run: echo "DIR=$(pwd)" >> $GITHUB_ENV

      - name: Clone repo
        run: git clone https://github.com/Crilum/update
      # Runs a single command using the runners shell
      - name: Prepare for building
        run: |
          LATEST=`curl -s https://api.github.com/repos/Crilum/update/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")' | tr -d 'v'`
          cd update
          mkdir updatedeb && cd updatedeb
          mkdir -p usr/bin/
          mv ../update usr/bin/update
          mkdir DEBIAN
          cd DEBIAN
          wget -O control https://github.com/Crilum/update/raw/main/debian/control
          echo "Version: ${LATEST}" >> control
          wget -O postinst https://github.com/Crilum/update/raw/main/debian/postinst
          chmod 775 postinst
          cd ..
          cd ..
          dpkg-deb --build updatedeb update_${LATEST}_all.deb
          echo "DEB=$(basename update*.deb)" >> $GITHUB_ENV 
          
      - name: Upload to release
        uses: docker://gacts/upload-to-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: '${{ env.DIR }}/update/${{ env.DEB }}'
          type: 'application/x-debian-package'
